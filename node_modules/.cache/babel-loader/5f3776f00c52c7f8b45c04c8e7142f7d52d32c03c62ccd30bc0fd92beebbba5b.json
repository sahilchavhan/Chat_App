{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.innerText = exports.textContent = exports.getText = exports.getInnerHTML = exports.getOuterHTML = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar dom_serializer_1 = __importDefault(require(\"dom-serializer\"));\nvar domelementtype_1 = require(\"domelementtype\");\n/**\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @deprecated Use the `dom-serializer` module directly.\n * @returns `node`'s outer HTML.\n */\nfunction getOuterHTML(node, options) {\n  return (0, dom_serializer_1.default)(node, options);\n}\nexports.getOuterHTML = getOuterHTML;\n/**\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @deprecated Use the `dom-serializer` module directly.\n * @returns `node`'s inner HTML.\n */\nfunction getInnerHTML(node, options) {\n  return (0, domhandler_1.hasChildren)(node) ? node.children.map(function (node) {\n    return getOuterHTML(node, options);\n  }).join(\"\") : \"\";\n}\nexports.getInnerHTML = getInnerHTML;\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags.\n *\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nfunction getText(node) {\n  if (Array.isArray(node)) return node.map(getText).join(\"\");\n  if ((0, domhandler_1.isTag)(node)) return node.name === \"br\" ? \"\\n\" : getText(node.children);\n  if ((0, domhandler_1.isCDATA)(node)) return getText(node.children);\n  if ((0, domhandler_1.isText)(node)) return node.data;\n  return \"\";\n}\nexports.getText = getText;\n/**\n * Get a node's text content.\n *\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nfunction textContent(node) {\n  if (Array.isArray(node)) return node.map(textContent).join(\"\");\n  if ((0, domhandler_1.hasChildren)(node) && !(0, domhandler_1.isComment)(node)) {\n    return textContent(node.children);\n  }\n  if ((0, domhandler_1.isText)(node)) return node.data;\n  return \"\";\n}\nexports.textContent = textContent;\n/**\n * Get a node's inner text.\n *\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nfunction innerText(node) {\n  if (Array.isArray(node)) return node.map(innerText).join(\"\");\n  if ((0, domhandler_1.hasChildren)(node) && (node.type === domelementtype_1.ElementType.Tag || (0, domhandler_1.isCDATA)(node))) {\n    return innerText(node.children);\n  }\n  if ((0, domhandler_1.isText)(node)) return node.data;\n  return \"\";\n}\nexports.innerText = innerText;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","innerText","textContent","getText","getInnerHTML","getOuterHTML","domhandler_1","require","dom_serializer_1","domelementtype_1","node","options","default","hasChildren","children","map","join","Array","isArray","isTag","name","isCDATA","isText","data","isComment","type","ElementType","Tag"],"sources":["C:/Users/AVITA/Desktop/chatbot/node_modules/domutils/lib/stringify.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.innerText = exports.textContent = exports.getText = exports.getInnerHTML = exports.getOuterHTML = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar dom_serializer_1 = __importDefault(require(\"dom-serializer\"));\nvar domelementtype_1 = require(\"domelementtype\");\n/**\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @deprecated Use the `dom-serializer` module directly.\n * @returns `node`'s outer HTML.\n */\nfunction getOuterHTML(node, options) {\n    return (0, dom_serializer_1.default)(node, options);\n}\nexports.getOuterHTML = getOuterHTML;\n/**\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @deprecated Use the `dom-serializer` module directly.\n * @returns `node`'s inner HTML.\n */\nfunction getInnerHTML(node, options) {\n    return (0, domhandler_1.hasChildren)(node)\n        ? node.children.map(function (node) { return getOuterHTML(node, options); }).join(\"\")\n        : \"\";\n}\nexports.getInnerHTML = getInnerHTML;\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags.\n *\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nfunction getText(node) {\n    if (Array.isArray(node))\n        return node.map(getText).join(\"\");\n    if ((0, domhandler_1.isTag)(node))\n        return node.name === \"br\" ? \"\\n\" : getText(node.children);\n    if ((0, domhandler_1.isCDATA)(node))\n        return getText(node.children);\n    if ((0, domhandler_1.isText)(node))\n        return node.data;\n    return \"\";\n}\nexports.getText = getText;\n/**\n * Get a node's text content.\n *\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nfunction textContent(node) {\n    if (Array.isArray(node))\n        return node.map(textContent).join(\"\");\n    if ((0, domhandler_1.hasChildren)(node) && !(0, domhandler_1.isComment)(node)) {\n        return textContent(node.children);\n    }\n    if ((0, domhandler_1.isText)(node))\n        return node.data;\n    return \"\";\n}\nexports.textContent = textContent;\n/**\n * Get a node's inner text.\n *\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nfunction innerText(node) {\n    if (Array.isArray(node))\n        return node.map(innerText).join(\"\");\n    if ((0, domhandler_1.hasChildren)(node) && (node.type === domelementtype_1.ElementType.Tag || (0, domhandler_1.isCDATA)(node))) {\n        return innerText(node.children);\n    }\n    if ((0, domhandler_1.isText)(node))\n        return node.data;\n    return \"\";\n}\nexports.innerText = innerText;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}