{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AVITA\\\\Desktop\\\\chatbot\\\\src\\\\component\\\\Chatfeed.jsx\";\nimport React from 'react';\nimport Messageform from './Messageform';\nimport Mymessage from './Mymessage';\nimport Theirmessage from './Theirmessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatfeed = props => {\n  //destructor to use like convient\n  const {\n    chats,\n    activeChat,\n    userName,\n    messages\n  } = props;\n  //if chat is true\n  const chat = chats && chats[activeChat];\n\n  //to generate a message\n  const renderMessage = () => {\n    //fetch all message\n    //key is id of specific message\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      //message of that key\n      const message = messages[key];\n      //find last message\n      const lastMessage = index === 0 ? null : keys[index - 1];\n      //to know if message is ours\n      const isMyMessage = userName === message.sender.username;\n      return (\n        /*#__PURE__*/\n        //return message\n        _jsxDEV(\"div\", {\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-block\",\n            children: isMyMessage ? /*#__PURE__*/_jsxDEV(Mymessage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Theirmessage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"read-receipts\",\n            style: {\n              marginRight: isMyMessage ? '18px' : '0px',\n              marginLeft: isMyMessage ? '0px' : '68px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this)]\n        }, `msg_${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      );\n    });\n  };\n\n  //call renderMessage\n  renderMessage();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-feed\",\n    children: \"chatfeed\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = Chatfeed;\nexport default Chatfeed;\nvar _c;\n$RefreshReg$(_c, \"Chatfeed\");","map":{"version":3,"names":["React","Messageform","Mymessage","Theirmessage","Chatfeed","props","chats","activeChat","userName","messages","chat","renderMessage","keys","Object","map","key","index","message","lastMessage","isMyMessage","sender","username","width","marginRight","marginLeft"],"sources":["C:/Users/AVITA/Desktop/chatbot/src/component/Chatfeed.jsx"],"sourcesContent":["import React from 'react'\r\nimport Messageform from './Messageform';\r\nimport Mymessage from './Mymessage';\r\nimport Theirmessage from './Theirmessage';\r\n\r\nconst Chatfeed = (props) => {\r\n  //destructor to use like convient\r\n  const { chats, activeChat, userName, messages } = props;\r\n  //if chat is true\r\n  const chat = chats && chats[activeChat];\r\n\r\n  //to generate a message\r\n  const renderMessage = () => {\r\n    //fetch all message\r\n    //key is id of specific message\r\n    const keys = Object.keys(messages);\r\n    return keys.map((key, index) => {\r\n      //message of that key\r\n      const message = messages[key];\r\n      //find last message\r\n      const lastMessage = index === 0 ? null : keys[index - 1];\r\n      //to know if message is ours\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        //return message\r\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n          <div className='message-block'>\r\n            {/* render a meesage */}\r\n            {\r\n              isMyMessage\r\n                ? <Mymessage />\r\n                : <Theirmessage />\r\n            }\r\n          </div>\r\n          <div className='read-receipts' style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}></div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  //call renderMessage\r\n  renderMessage();\r\n  return (\r\n    <div className='chat-feed'>chatfeed</div>\r\n  )\r\n}\r\n\r\nexport default Chatfeed"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAE1C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B;EACA,MAAM;IAAEC,KAAK;IAAEC,UAAU;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGJ,KAAK;EACvD;EACA,MAAMK,IAAI,GAAGJ,KAAK,IAAIA,KAAK,CAACC,UAAU,CAAC;;EAEvC;EACA,MAAMI,aAAa,GAAG,MAAM;IAC1B;IACA;IACA,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACH,QAAQ,CAAC;IAClC,OAAOG,IAAI,CAACE,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MAC9B;MACA,MAAMC,OAAO,GAAGR,QAAQ,CAACM,GAAG,CAAC;MAC7B;MACA,MAAMG,WAAW,GAAGF,KAAK,KAAK,CAAC,GAAG,IAAI,GAAGJ,IAAI,CAACI,KAAK,GAAG,CAAC,CAAC;MACxD;MACA,MAAMG,WAAW,GAAGX,QAAQ,KAAKS,OAAO,CAACG,MAAM,CAACC,QAAQ;MAExD;QAAA;QACE;QACA;UAA0B,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAA,wBACjD;YAAK,SAAS,EAAC,eAAe;YAAA,UAG1BH,WAAW,gBACP,QAAC,SAAS;cAAA;cAAA;cAAA;YAAA,QAAG,gBACb,QAAC,YAAY;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QAElB,eACN;YAAK,SAAS,EAAC,eAAe;YAAC,KAAK,EAAE;cAAEI,WAAW,EAAEJ,WAAW,GAAG,MAAM,GAAG,KAAK;cAAEK,UAAU,EAAEL,WAAW,GAAG,KAAK,GAAG;YAAO;UAAE;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA,GAT5H,OAAMH,KAAM,EAAC;UAAA;UAAA;UAAA;QAAA;MAUlB;IAEV,CAAC,CAAC;EACJ,CAAC;;EAED;EACAL,aAAa,EAAE;EACf,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,UAAC;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAM;AAE7C,CAAC;AAAA,KAzCKP,QAAQ;AA2Cd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}