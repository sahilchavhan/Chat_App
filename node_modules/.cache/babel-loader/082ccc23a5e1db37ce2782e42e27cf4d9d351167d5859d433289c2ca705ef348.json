{"ast":null,"code":"/* eslint-disable max-classes-per-file */\n\nconst {\n  InlineTextBuilder\n} = require('./inline-text-builder');\nclass StackItem {\n  constructor() {\n    let next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    this.next = next;\n  }\n  getRoot() {\n    return this.next ? this.next : this;\n  }\n}\nclass BlockStackItem extends StackItem {\n  constructor(options) {\n    let next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let leadingLineBreaks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let maxLineLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n    super(next);\n    this.leadingLineBreaks = leadingLineBreaks;\n    this.inlineTextBuilder = new InlineTextBuilder(options, maxLineLength);\n    this.rawText = '';\n    this.stashedLineBreaks = 0;\n    this.isPre = next && next.isPre;\n  }\n}\nclass TableStackItem extends StackItem {\n  constructor() {\n    let next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    super(next);\n    this.rows = [];\n    this.isPre = next && next.isPre;\n  }\n}\nclass TableRowStackItem extends StackItem {\n  constructor() {\n    let next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    super(next);\n    this.cells = [];\n    this.isPre = next && next.isPre;\n  }\n}\nclass TableCellStackItem extends StackItem {\n  constructor(options) {\n    let next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let maxColumnWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    super(next);\n    this.inlineTextBuilder = new InlineTextBuilder(options, maxColumnWidth);\n    this.rawText = '';\n    this.stashedLineBreaks = 0;\n    this.isPre = next && next.isPre;\n  }\n}\nclass TransformerStackItem extends StackItem {\n  constructor() {\n    let next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let transform = arguments.length > 1 ? arguments[1] : undefined;\n    super(next);\n    this.transform = transform;\n  }\n}\nmodule.exports = {\n  BlockStackItem: BlockStackItem,\n  StackItem: StackItem,\n  TableCellStackItem: TableCellStackItem,\n  TableRowStackItem: TableRowStackItem,\n  TableStackItem: TableStackItem,\n  TransformerStackItem: TransformerStackItem\n};","map":{"version":3,"names":["InlineTextBuilder","require","StackItem","constructor","next","getRoot","BlockStackItem","options","leadingLineBreaks","maxLineLength","undefined","inlineTextBuilder","rawText","stashedLineBreaks","isPre","TableStackItem","rows","TableRowStackItem","cells","TableCellStackItem","maxColumnWidth","TransformerStackItem","transform","module","exports"],"sources":["C:/Users/Tapasya/Desktop/SAHIL VIT/chatapp/node_modules/html-to-text/lib/stack-item.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\n\nconst { InlineTextBuilder } = require('./inline-text-builder');\n\n\nclass StackItem {\n  constructor (next = null) { this.next = next; }\n\n  getRoot () { return (this.next) ? this.next : this; }\n}\n\nclass BlockStackItem extends StackItem {\n  constructor (options, next = null, leadingLineBreaks = 1, maxLineLength = undefined) {\n    super(next);\n    this.leadingLineBreaks = leadingLineBreaks;\n    this.inlineTextBuilder = new InlineTextBuilder(options, maxLineLength);\n    this.rawText = '';\n    this.stashedLineBreaks = 0;\n    this.isPre = next && next.isPre;\n  }\n}\n\nclass TableStackItem extends StackItem {\n  constructor (next = null) {\n    super(next);\n    this.rows = [];\n    this.isPre = next && next.isPre;\n  }\n}\n\nclass TableRowStackItem extends StackItem {\n  constructor (next = null) {\n    super(next);\n    this.cells = [];\n    this.isPre = next && next.isPre;\n  }\n}\n\nclass TableCellStackItem extends StackItem {\n  constructor (options, next = null, maxColumnWidth = undefined) {\n    super(next);\n    this.inlineTextBuilder = new InlineTextBuilder(options, maxColumnWidth);\n    this.rawText = '';\n    this.stashedLineBreaks = 0;\n    this.isPre = next && next.isPre;\n  }\n}\n\nclass TransformerStackItem extends StackItem {\n  constructor (next = null, transform) {\n    super(next);\n    this.transform = transform;\n  }\n}\n\nmodule.exports = {\n  BlockStackItem: BlockStackItem,\n  StackItem: StackItem,\n  TableCellStackItem: TableCellStackItem,\n  TableRowStackItem: TableRowStackItem,\n  TableStackItem: TableStackItem,\n  TransformerStackItem: TransformerStackItem,\n};\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAkB,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAG9D,MAAMC,SAAS,CAAC;EACdC,WAAW,GAAe;IAAA,IAAbC,IAAI,uEAAG,IAAI;IAAI,IAAI,CAACA,IAAI,GAAGA,IAAI;EAAE;EAE9CC,OAAO,GAAI;IAAE,OAAQ,IAAI,CAACD,IAAI,GAAI,IAAI,CAACA,IAAI,GAAG,IAAI;EAAE;AACtD;AAEA,MAAME,cAAc,SAASJ,SAAS,CAAC;EACrCC,WAAW,CAAEI,OAAO,EAAiE;IAAA,IAA/DH,IAAI,uEAAG,IAAI;IAAA,IAAEI,iBAAiB,uEAAG,CAAC;IAAA,IAAEC,aAAa,uEAAGC,SAAS;IACjF,KAAK,CAACN,IAAI,CAAC;IACX,IAAI,CAACI,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACG,iBAAiB,GAAG,IAAIX,iBAAiB,CAACO,OAAO,EAAEE,aAAa,CAAC;IACtE,IAAI,CAACG,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,iBAAiB,GAAG,CAAC;IAC1B,IAAI,CAACC,KAAK,GAAGV,IAAI,IAAIA,IAAI,CAACU,KAAK;EACjC;AACF;AAEA,MAAMC,cAAc,SAASb,SAAS,CAAC;EACrCC,WAAW,GAAe;IAAA,IAAbC,IAAI,uEAAG,IAAI;IACtB,KAAK,CAACA,IAAI,CAAC;IACX,IAAI,CAACY,IAAI,GAAG,EAAE;IACd,IAAI,CAACF,KAAK,GAAGV,IAAI,IAAIA,IAAI,CAACU,KAAK;EACjC;AACF;AAEA,MAAMG,iBAAiB,SAASf,SAAS,CAAC;EACxCC,WAAW,GAAe;IAAA,IAAbC,IAAI,uEAAG,IAAI;IACtB,KAAK,CAACA,IAAI,CAAC;IACX,IAAI,CAACc,KAAK,GAAG,EAAE;IACf,IAAI,CAACJ,KAAK,GAAGV,IAAI,IAAIA,IAAI,CAACU,KAAK;EACjC;AACF;AAEA,MAAMK,kBAAkB,SAASjB,SAAS,CAAC;EACzCC,WAAW,CAAEI,OAAO,EAA2C;IAAA,IAAzCH,IAAI,uEAAG,IAAI;IAAA,IAAEgB,cAAc,uEAAGV,SAAS;IAC3D,KAAK,CAACN,IAAI,CAAC;IACX,IAAI,CAACO,iBAAiB,GAAG,IAAIX,iBAAiB,CAACO,OAAO,EAAEa,cAAc,CAAC;IACvE,IAAI,CAACR,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,iBAAiB,GAAG,CAAC;IAC1B,IAAI,CAACC,KAAK,GAAGV,IAAI,IAAIA,IAAI,CAACU,KAAK;EACjC;AACF;AAEA,MAAMO,oBAAoB,SAASnB,SAAS,CAAC;EAC3CC,WAAW,GAA0B;IAAA,IAAxBC,IAAI,uEAAG,IAAI;IAAA,IAAEkB,SAAS;IACjC,KAAK,CAAClB,IAAI,CAAC;IACX,IAAI,CAACkB,SAAS,GAAGA,SAAS;EAC5B;AACF;AAEAC,MAAM,CAACC,OAAO,GAAG;EACflB,cAAc,EAAEA,cAAc;EAC9BJ,SAAS,EAAEA,SAAS;EACpBiB,kBAAkB,EAAEA,kBAAkB;EACtCF,iBAAiB,EAAEA,iBAAiB;EACpCF,cAAc,EAAEA,cAAc;EAC9BM,oBAAoB,EAAEA;AACxB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}