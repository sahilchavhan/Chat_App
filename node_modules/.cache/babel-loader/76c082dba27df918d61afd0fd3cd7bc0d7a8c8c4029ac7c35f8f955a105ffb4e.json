{"ast":null,"code":"'use strict';\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar createClass = require('create-react-class');\nvar QuillMixin = require('./mixin');\nvar find = require('lodash/find');\nvar some = require('lodash/some');\nvar isEqual = require('lodash/isEqual');\nvar T = require('prop-types');\nvar DOM = require('react-dom-factories');\nvar QuillComponent = createClass({\n  displayName: 'Quill',\n  mixins: [QuillMixin],\n  propTypes: {\n    id: T.string,\n    className: T.string,\n    theme: T.string,\n    style: T.object,\n    readOnly: T.bool,\n    value: T.oneOfType([T.string, T.shape({\n      ops: T.array\n    })]),\n    defaultValue: T.oneOfType([T.string, T.shape({\n      ops: T.array\n    })]),\n    placeholder: T.string,\n    tabIndex: T.number,\n    bounds: T.oneOfType([T.string, T.element]),\n    onChange: T.func,\n    onChangeSelection: T.func,\n    onFocus: T.func,\n    onBlur: T.func,\n    onKeyPress: T.func,\n    onKeyDown: T.func,\n    onKeyUp: T.func,\n    preserveWhitespace: T.bool,\n    modules: function (props) {\n      var isNotObject = T.object.apply(this, arguments);\n      if (isNotObject) return isNotObject;\n      if (props.modules && props.modules.toolbar && props.modules.toolbar[0] && props.modules.toolbar[0].type) return new Error('Since v1.0.0, React Quill will not create a custom toolbar for you ' + 'anymore. Create a toolbar explictly, or let Quill create one. ' + 'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100');\n    },\n    toolbar: function (props) {\n      if ('toolbar' in props) return new Error('The `toolbar` prop has been deprecated. Use `modules.toolbar` instead. ' + 'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100');\n    },\n    formats: function (props) {\n      var isNotArrayOfString = T.arrayOf(T.string).apply(this, arguments);\n      if (isNotArrayOfString) return new Error('You cannot specify custom `formats` anymore. Use Parchment instead.  ' + 'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.');\n    },\n    styles: function (props) {\n      if ('styles' in props) return new Error('The `styles` prop has been deprecated. Use custom stylesheets instead. ' + 'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.');\n    },\n    pollInterval: function (props) {\n      if ('pollInterval' in props) return new Error('The `pollInterval` property does not have any effect anymore. ' + 'You can safely remove it from your props.' + 'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.');\n    },\n    children: function (props) {\n      // Validate that the editor has only one child element and it is not a <textarea>\n      var isNotASingleElement = T.element.apply(this, arguments);\n      if (isNotASingleElement) return new Error('The Quill editing area can only be composed of a single React element.');\n      if (React.Children.count(props.children)) {\n        var child = React.Children.only(props.children);\n        if (child.type === 'textarea') return new Error('Quill does not support editing on a <textarea>. Use a <div> instead.');\n      }\n    }\n  },\n  /*\n  Changing one of these props should cause a full re-render.\n  */\n  dirtyProps: ['modules', 'formats', 'bounds', 'theme', 'children'],\n  /*\n  Changing one of these props should cause a regular update.\n  */\n  cleanProps: ['id', 'className', 'style', 'placeholder', 'tabIndex', 'onChange', 'onChangeSelection', 'onFocus', 'onBlur', 'onKeyPress', 'onKeyDown', 'onKeyUp'],\n  getDefaultProps: function () {\n    return {\n      theme: 'snow',\n      modules: {}\n    };\n  },\n  /*\n  We consider the component to be controlled if `value` is being sent in props.\n  */\n  isControlled: function () {\n    return 'value' in this.props;\n  },\n  getInitialState: function () {\n    return {\n      generation: 0,\n      value: this.isControlled() ? this.props.value : this.props.defaultValue\n    };\n  },\n  componentWillReceiveProps: function (nextProps, nextState) {\n    var editor = this.editor;\n\n    // If the component is unmounted and mounted too quickly\n    // an error is thrown in setEditorContents since editor is\n    // still undefined. Must check if editor is undefined\n    // before performing this call.\n    if (!editor) return;\n\n    // Update only if we've been passed a new `value`.\n    // This leaves components using `defaultValue` alone.\n    if ('value' in nextProps) {\n      var currentContents = this.getEditorContents();\n      var nextContents = nextProps.value;\n      if (nextContents === this.lastDeltaChangeSet) throw new Error('You are passing the `delta` object from the `onChange` event back ' + 'as `value`. You most probably want `editor.getContents()` instead. ' + 'See: https://github.com/zenoamaro/react-quill#using-deltas');\n\n      // NOTE: Seeing that Quill is missing a way to prevent\n      //       edits, we have to settle for a hybrid between\n      //       controlled and uncontrolled mode. We can't prevent\n      //       the change, but we'll still override content\n      //       whenever `value` differs from current state.\n      // NOTE: Comparing an HTML string and a Quill Delta will always trigger \n      //       a change, regardless of whether they represent the same document.\n      if (!this.isEqualValue(nextContents, currentContents)) {\n        this.setEditorContents(editor, nextContents);\n      }\n    }\n\n    // We can update readOnly state in-place.\n    if ('readOnly' in nextProps) {\n      if (nextProps.readOnly !== this.props.readOnly) {\n        this.setEditorReadOnly(editor, nextProps.readOnly);\n      }\n    }\n\n    // If we need to regenerate the component, we can avoid a detailed\n    // in-place update step, and just let everything rerender.\n    if (this.shouldComponentRegenerate(nextProps, nextState)) {\n      return this.regenerate();\n    }\n  },\n  componentDidMount: function () {\n    this.editor = this.createEditor(this.getEditingArea(), this.getEditorConfig());\n    // Restore editor from Quill's native formats in regeneration scenario\n    if (this.quillDelta) {\n      this.editor.setContents(this.quillDelta);\n      this.editor.setSelection(this.quillSelection);\n      this.editor.focus();\n      this.quillDelta = this.quillSelection = null;\n      return;\n    }\n    if (this.state.value) {\n      this.setEditorContents(this.editor, this.state.value);\n      return;\n    }\n  },\n  componentWillUnmount: function () {\n    var editor;\n    if (editor = this.getEditor()) {\n      this.unhookEditor(editor);\n      this.editor = null;\n    }\n  },\n  shouldComponentUpdate: function (nextProps, nextState) {\n    var self = this;\n\n    // If the component has been regenerated, we already know we should update.\n    if (this.state.generation !== nextState.generation) {\n      return true;\n    }\n\n    // Compare props that require React updating the DOM.\n    return some(this.cleanProps, function (prop) {\n      // Note that `isEqual` compares deeply, making it safe to perform\n      // non-immutable updates, at the cost of performance.\n      return !isEqual(nextProps[prop], self.props[prop]);\n    });\n  },\n  shouldComponentRegenerate: function (nextProps, nextState) {\n    var self = this;\n    // Whenever a `dirtyProp` changes, the editor needs reinstantiation.\n    return some(this.dirtyProps, function (prop) {\n      // Note that `isEqual` compares deeply, making it safe to perform\n      // non-immutable updates, at the cost of performance.\n      return !isEqual(nextProps[prop], self.props[prop]);\n    });\n  },\n  /*\n  If we could not update settings from the new props in-place, we have to tear\n  down everything and re-render from scratch.\n  */\n  componentWillUpdate: function (nextProps, nextState) {\n    if (this.state.generation !== nextState.generation) {\n      this.componentWillUnmount();\n    }\n  },\n  componentDidUpdate: function (prevProps, prevState) {\n    if (this.state.generation !== prevState.generation) {\n      this.componentDidMount();\n    }\n  },\n  getEditorConfig: function () {\n    return {\n      bounds: this.props.bounds,\n      formats: this.props.formats,\n      modules: this.props.modules,\n      placeholder: this.props.placeholder,\n      readOnly: this.props.readOnly,\n      scrollingContainer: this.props.scrollingContainer,\n      tabIndex: this.props.tabIndex,\n      theme: this.props.theme\n    };\n  },\n  getEditor: function () {\n    return this.editor;\n  },\n  getEditingArea: function () {\n    return ReactDOM.findDOMNode(this.editingArea);\n  },\n  getEditorContents: function () {\n    return this.state.value;\n  },\n  getEditorSelection: function () {\n    return this.state.selection;\n  },\n  /*\n  True if the value is a Delta instance or a Delta look-alike.\n  */\n  isDelta: function (value) {\n    return value && value.ops;\n  },\n  /*\n  Special comparison function that knows how to compare Deltas.\n  */\n  isEqualValue: function (value, nextValue) {\n    if (this.isDelta(value) && this.isDelta(nextValue)) {\n      return isEqual(value.ops, nextValue.ops);\n    } else {\n      return isEqual(value, nextValue);\n    }\n  },\n  /*\n  Regenerating the editor will cause the whole tree, including the container,\n  to be cleaned up and re-rendered from scratch.\n  */\n  regenerate: function () {\n    // Cache selection and contents in Quill's native format to be restored later\n    this.quillDelta = this.editor.getContents();\n    this.quillSelection = this.editor.getSelection();\n    this.setState({\n      generation: this.state.generation + 1\n    });\n  },\n  /*\n  Renders an editor area, unless it has been provided one to clone.\n  */\n  renderEditingArea: function () {\n    var self = this;\n    var children = this.props.children;\n    var preserveWhitespace = this.props.preserveWhitespace;\n    var properties = {\n      key: this.state.generation,\n      tabIndex: this.props.tabIndex,\n      ref: function (element) {\n        self.editingArea = element;\n      }\n    };\n    var customElement = React.Children.count(children) ? React.Children.only(children) : null;\n    var defaultElement = preserveWhitespace ? DOM.pre : DOM.div;\n    var editingArea = customElement ? React.cloneElement(customElement, properties) : defaultElement(properties);\n    return editingArea;\n  },\n  render: function () {\n    return DOM.div({\n      id: this.props.id,\n      style: this.props.style,\n      key: this.state.generation,\n      className: ['quill'].concat(this.props.className).join(' '),\n      onKeyPress: this.props.onKeyPress,\n      onKeyDown: this.props.onKeyDown,\n      onKeyUp: this.props.onKeyUp\n    }, this.renderEditingArea());\n  },\n  onEditorChangeText: function (value, delta, source, editor) {\n    var currentContents = this.getEditorContents();\n\n    // We keep storing the same type of value as what the user gives us,\n    // so that value comparisons will be more stable and predictable.\n    var nextContents = this.isDelta(currentContents) ? editor.getContents() : editor.getHTML();\n    if (!this.isEqualValue(nextContents, currentContents)) {\n      // Taint this `delta` object, so we can recognize whether the user\n      // is trying to send it back as `value`, preventing a likely loop.\n      this.lastDeltaChangeSet = delta;\n      this.setState({\n        value: nextContents\n      });\n      if (this.props.onChange) {\n        this.props.onChange(value, delta, source, editor);\n      }\n    }\n  },\n  onEditorChangeSelection: function (nextSelection, source, editor) {\n    var currentSelection = this.getEditorSelection();\n    var hasGainedFocus = !currentSelection && nextSelection;\n    var hasLostFocus = currentSelection && !nextSelection;\n    if (isEqual(nextSelection, currentSelection)) {\n      return;\n    }\n    this.setState({\n      selection: nextSelection\n    });\n    if (this.props.onChangeSelection) {\n      this.props.onChangeSelection(nextSelection, source, editor);\n    }\n    if (hasGainedFocus && this.props.onFocus) {\n      this.props.onFocus(nextSelection, source, editor);\n    } else if (hasLostFocus && this.props.onBlur) {\n      this.props.onBlur(currentSelection, source, editor);\n    }\n  },\n  focus: function () {\n    this.editor.focus();\n  },\n  blur: function () {\n    this.setEditorSelection(this.editor, null);\n  }\n});\nmodule.exports = QuillComponent;","map":{"version":3,"names":["React","require","ReactDOM","createClass","QuillMixin","find","some","isEqual","T","DOM","QuillComponent","displayName","mixins","propTypes","id","string","className","theme","style","object","readOnly","bool","value","oneOfType","shape","ops","array","defaultValue","placeholder","tabIndex","number","bounds","element","onChange","func","onChangeSelection","onFocus","onBlur","onKeyPress","onKeyDown","onKeyUp","preserveWhitespace","modules","props","isNotObject","apply","arguments","toolbar","type","Error","formats","isNotArrayOfString","arrayOf","styles","pollInterval","children","isNotASingleElement","Children","count","child","only","dirtyProps","cleanProps","getDefaultProps","isControlled","getInitialState","generation","componentWillReceiveProps","nextProps","nextState","editor","currentContents","getEditorContents","nextContents","lastDeltaChangeSet","isEqualValue","setEditorContents","setEditorReadOnly","shouldComponentRegenerate","regenerate","componentDidMount","createEditor","getEditingArea","getEditorConfig","quillDelta","setContents","setSelection","quillSelection","focus","state","componentWillUnmount","getEditor","unhookEditor","shouldComponentUpdate","self","prop","componentWillUpdate","componentDidUpdate","prevProps","prevState","scrollingContainer","findDOMNode","editingArea","getEditorSelection","selection","isDelta","nextValue","getContents","getSelection","setState","renderEditingArea","properties","key","ref","customElement","defaultElement","pre","div","cloneElement","render","concat","join","onEditorChangeText","delta","source","getHTML","onEditorChangeSelection","nextSelection","currentSelection","hasGainedFocus","hasLostFocus","blur","setEditorSelection","module","exports"],"sources":["C:/Users/AVITA/Desktop/chatbot/node_modules/react-chat-engine/node_modules/react-quill/lib/component.js"],"sourcesContent":["'use strict';\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar createClass = require('create-react-class');\nvar QuillMixin = require('./mixin');\nvar find = require('lodash/find');\nvar some = require('lodash/some');\nvar isEqual = require('lodash/isEqual');\nvar T = require('prop-types');\nvar DOM = require('react-dom-factories');\n\nvar QuillComponent = createClass({\n\n\tdisplayName: 'Quill',\n\n\tmixins: [ QuillMixin ],\n\n\tpropTypes: {\n\t\tid: T.string,\n\t\tclassName: T.string,\n\t\ttheme: T.string,\n\t\tstyle: T.object,\n\t\treadOnly: T.bool,\n\t\tvalue: T.oneOfType([T.string, T.shape({ops: T.array})]),\n\t\tdefaultValue: T.oneOfType([T.string, T.shape({ops: T.array})]),\n\t\tplaceholder: T.string,\n\t\ttabIndex: T.number,\n\t\tbounds: T.oneOfType([T.string, T.element]),\n\t\tonChange: T.func,\n\t\tonChangeSelection: T.func,\n\t\tonFocus: T.func,\n\t\tonBlur: T.func,\n\t\tonKeyPress: T.func,\n\t\tonKeyDown: T.func,\n\t\tonKeyUp: T.func,\n\t\tpreserveWhitespace: T.bool,\n\n\t\tmodules: function(props) {\n\t\t\tvar isNotObject = T.object.apply(this, arguments);\n\t\t\tif (isNotObject) return isNotObject;\n\n\t\t\tif (\n\t\t\t\tprops.modules && \n\t\t\t\tprops.modules.toolbar &&\n\t\t\t\tprops.modules.toolbar[0] &&\n\t\t\t\tprops.modules.toolbar[0].type\n\t\t\t) return new Error(\n\t\t\t\t'Since v1.0.0, React Quill will not create a custom toolbar for you ' +\n\t\t\t\t'anymore. Create a toolbar explictly, or let Quill create one. ' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100'\n\t\t\t);\n\t\t},\n\n\t\ttoolbar: function(props) {\n\t\t\tif ('toolbar' in props) return new Error(\n\t\t\t\t'The `toolbar` prop has been deprecated. Use `modules.toolbar` instead. ' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100'\n\t\t\t);\n\t\t},\n\n\t\tformats: function(props) {\n\t\t\tvar isNotArrayOfString = T.arrayOf(T.string).apply(this, arguments);\n\n\t\t\tif (isNotArrayOfString) return new Error(\n\t\t\t\t'You cannot specify custom `formats` anymore. Use Parchment instead.  ' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.'\n\t\t\t);\n\t\t},\n\n\t\tstyles: function(props) {\n\t\t\tif ('styles' in props) return new Error(\n\t\t\t\t'The `styles` prop has been deprecated. Use custom stylesheets instead. ' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.'\n\t\t\t);\n\t\t},\n\n\t\tpollInterval: function(props) {\n\t\t\tif ('pollInterval' in props) return new Error(\n\t\t\t\t'The `pollInterval` property does not have any effect anymore. ' +\n\t\t\t\t'You can safely remove it from your props.' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#upgrading-to-react-quill-v100.'\n\t\t\t);\n\t\t},\n\n\t\tchildren: function(props) {\n\t\t\t// Validate that the editor has only one child element and it is not a <textarea>\n\t\t\tvar isNotASingleElement = T.element.apply(this, arguments);\n\t\t\tif (isNotASingleElement) return new Error(\n\t\t\t\t'The Quill editing area can only be composed of a single React element.'\n\t\t\t);\n\n\t\t\tif (React.Children.count(props.children)) {\n\t\t\t\tvar child = React.Children.only(props.children);\n\t\t\t\tif (child.type === 'textarea') return new Error(\n\t\t\t\t\t'Quill does not support editing on a <textarea>. Use a <div> instead.'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\t\t\n\t/*\n\tChanging one of these props should cause a full re-render.\n\t*/\n\tdirtyProps: [\n\t\t'modules',\n\t\t'formats',\n\t\t'bounds',\n\t\t'theme',\n\t\t'children',\n\t],\n\n\t/*\n\tChanging one of these props should cause a regular update.\n\t*/\n\tcleanProps: [\n\t\t'id',\n\t\t'className',\n\t\t'style',\n\t\t'placeholder',\n\t\t'tabIndex',\n\t\t'onChange',\n\t\t'onChangeSelection',\n\t\t'onFocus',\n\t\t'onBlur',\n\t\t'onKeyPress',\n\t\t'onKeyDown',\n\t\t'onKeyUp',\n\t],\n\n\tgetDefaultProps: function() {\n\t\treturn {\n\t\t\ttheme: 'snow',\n\t\t\tmodules: {},\n\t\t};\n\t},\n\n\t/*\n\tWe consider the component to be controlled if `value` is being sent in props.\n\t*/\n\tisControlled: function() {\n\t\treturn 'value' in this.props;\n\t},\n\n\tgetInitialState: function() {\n\t\treturn {\n\t\t\tgeneration: 0,\n\t\t\tvalue: this.isControlled()\n\t\t\t\t? this.props.value\n\t\t\t\t: this.props.defaultValue\n\t\t};\n\t},\n\n\tcomponentWillReceiveProps: function(nextProps, nextState) {\n\t\tvar editor = this.editor;\n\n\t\t// If the component is unmounted and mounted too quickly\n\t\t// an error is thrown in setEditorContents since editor is\n\t\t// still undefined. Must check if editor is undefined\n\t\t// before performing this call.\n\t\tif (!editor) return;\n\t\t\n\t\t// Update only if we've been passed a new `value`.\n\t\t// This leaves components using `defaultValue` alone.\n\t\tif ('value' in nextProps) {\n\t\t\tvar currentContents = this.getEditorContents();\n\t\t\tvar nextContents = nextProps.value;\n\n\t\t\tif (nextContents === this.lastDeltaChangeSet) throw new Error(\n\t\t\t\t'You are passing the `delta` object from the `onChange` event back ' +\n\t\t\t\t'as `value`. You most probably want `editor.getContents()` instead. ' +\n\t\t\t\t'See: https://github.com/zenoamaro/react-quill#using-deltas'\n\t\t\t);\n\n\t\t\t// NOTE: Seeing that Quill is missing a way to prevent\n\t\t\t//       edits, we have to settle for a hybrid between\n\t\t\t//       controlled and uncontrolled mode. We can't prevent\n\t\t\t//       the change, but we'll still override content\n\t\t\t//       whenever `value` differs from current state.\n\t\t\t// NOTE: Comparing an HTML string and a Quill Delta will always trigger \n\t\t\t//       a change, regardless of whether they represent the same document.\n\t\t\tif (!this.isEqualValue(nextContents, currentContents)) {\n\t\t\t\tthis.setEditorContents(editor, nextContents);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// We can update readOnly state in-place.\n\t\tif ('readOnly' in nextProps) {\n\t\t\tif (nextProps.readOnly !== this.props.readOnly) {\n\t\t\t\tthis.setEditorReadOnly(editor, nextProps.readOnly);\n\t\t\t}\n\t\t}\n\n\t\t// If we need to regenerate the component, we can avoid a detailed\n\t\t// in-place update step, and just let everything rerender.\n\t\tif (this.shouldComponentRegenerate(nextProps, nextState)) {\n\t\t\treturn this.regenerate();\n\t\t}\n\t},\n\n\tcomponentDidMount: function() {\n\t\tthis.editor = this.createEditor(\n\t\t\tthis.getEditingArea(),\n\t\t\tthis.getEditorConfig()\n\t\t);\n\t\t// Restore editor from Quill's native formats in regeneration scenario\n\t\tif (this.quillDelta) {\n\t\t\tthis.editor.setContents(this.quillDelta);\n\t\t\tthis.editor.setSelection(this.quillSelection);\t\t\n\t\t\tthis.editor.focus();\n\t\t\tthis.quillDelta = this.quillSelection = null;\n\t\t\treturn;\n\t\t}\n\t\tif (this.state.value) {\n\t\t\tthis.setEditorContents(this.editor, this.state.value);\n\t\t\treturn;\n\t\t}\n\t},\n\n\tcomponentWillUnmount: function() {\n\t\tvar editor; if ((editor = this.getEditor())) {\n\t\t\tthis.unhookEditor(editor);\n\t\t\tthis.editor = null;\n\t\t}\n\t},\n\n\tshouldComponentUpdate: function(nextProps, nextState) {\n\t\tvar self = this;\n\n\t\t// If the component has been regenerated, we already know we should update.\n\t\tif (this.state.generation !== nextState.generation) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t// Compare props that require React updating the DOM.\n\t\treturn some(this.cleanProps, function(prop) {\n\t\t\t// Note that `isEqual` compares deeply, making it safe to perform\n\t\t\t// non-immutable updates, at the cost of performance.\n\t\t\treturn !isEqual(nextProps[prop], self.props[prop]);\n\t\t});\n\t},\n\n\tshouldComponentRegenerate: function(nextProps, nextState) {\n\t\tvar self = this;\n\t\t// Whenever a `dirtyProp` changes, the editor needs reinstantiation.\n\t\treturn some(this.dirtyProps, function(prop) {\n\t\t\t// Note that `isEqual` compares deeply, making it safe to perform\n\t\t\t// non-immutable updates, at the cost of performance.\n\t\t\treturn !isEqual(nextProps[prop], self.props[prop]);\n\t\t});\n\t},\n\n\t/*\n\tIf we could not update settings from the new props in-place, we have to tear\n\tdown everything and re-render from scratch.\n\t*/\n\tcomponentWillUpdate: function(nextProps, nextState) {\n\t\tif (this.state.generation !== nextState.generation) {\n\t\t\tthis.componentWillUnmount();\n\t\t}\n\t},\n\n\tcomponentDidUpdate: function(prevProps, prevState) {\n\t\tif (this.state.generation !== prevState.generation) {\n\t\t\tthis.componentDidMount();\n\t\t}\n\t},\n\n\tgetEditorConfig: function() {\n\t\treturn {\n\t\t\tbounds:       this.props.bounds,\n\t\t\tformats:      this.props.formats,\n\t\t\tmodules:      this.props.modules,\n\t\t\tplaceholder:  this.props.placeholder,\n\t\t\treadOnly:     this.props.readOnly,\n      \t\t\tscrollingContainer: this.props.scrollingContainer,\n\t\t\ttabIndex:     this.props.tabIndex,\n\t\t\ttheme:        this.props.theme,\n\t\t};\n\t},\n\n\tgetEditor: function() {\n\t\treturn this.editor;\n\t},\n\n\tgetEditingArea: function () {\n\t\treturn ReactDOM.findDOMNode(this.editingArea);\n\t},\n\n\tgetEditorContents: function() {\n\t\treturn this.state.value;\n\t},\n\n\tgetEditorSelection: function() {\n\t\treturn this.state.selection;\n\t},\n\n\t/*\n\tTrue if the value is a Delta instance or a Delta look-alike.\n\t*/\n\tisDelta: function(value) {\n\t\treturn value && value.ops;\n\t},\n\n\t/*\n\tSpecial comparison function that knows how to compare Deltas.\n\t*/\n\tisEqualValue: function(value, nextValue) {\n\t\tif (this.isDelta(value) && this.isDelta(nextValue)) {\n\t\t\treturn isEqual(value.ops, nextValue.ops);\n\t\t} else {\n\t\t\treturn isEqual(value, nextValue);\n\t\t}\n\t},\n\n\t/*\n\tRegenerating the editor will cause the whole tree, including the container,\n\tto be cleaned up and re-rendered from scratch.\n\t*/\n\tregenerate: function() {\n\t\t// Cache selection and contents in Quill's native format to be restored later\n\t\tthis.quillDelta = this.editor.getContents();\n\t\tthis.quillSelection = this.editor.getSelection();\n\t\tthis.setState({\n\t\t\tgeneration: this.state.generation + 1,\n\t\t});\n\t},\n\n\t/*\n\tRenders an editor area, unless it has been provided one to clone.\n\t*/\n\trenderEditingArea: function() {\n\t\tvar self = this;\n\t\tvar children = this.props.children;\n\t\tvar preserveWhitespace = this.props.preserveWhitespace;\n\n\t\tvar properties = {\n\t\t\tkey: this.state.generation,\n\t\t\ttabIndex: this.props.tabIndex,\n\t\t\tref: function(element) { self.editingArea = element },\n\t\t};\n\n\t\tvar customElement = React.Children.count(children)\n\t\t\t? React.Children.only(children)\n\t\t\t: null;\n\t\tvar defaultElement = preserveWhitespace ? DOM.pre : DOM.div;\n\t\tvar editingArea = customElement\n\t\t\t? React.cloneElement(customElement, properties)\n\t\t\t: defaultElement(properties);\n\n\t\treturn editingArea;\n\t},\n\n\trender: function() {\n\t\treturn DOM.div({\n\t\t\tid: this.props.id,\n\t\t\tstyle: this.props.style,\n\t\t\tkey: this.state.generation,\n\t\t\tclassName: ['quill'].concat(this.props.className).join(' '),\n\t\t\tonKeyPress: this.props.onKeyPress,\n\t\t\tonKeyDown: this.props.onKeyDown,\n\t\t\tonKeyUp: this.props.onKeyUp },\n\t\t\tthis.renderEditingArea()\n\t\t);\n\t},\n\n\tonEditorChangeText: function(value, delta, source, editor) {\n\t\tvar currentContents = this.getEditorContents();\n\n\t\t// We keep storing the same type of value as what the user gives us,\n\t\t// so that value comparisons will be more stable and predictable.\n\t\tvar nextContents = this.isDelta(currentContents)\n\t\t\t? editor.getContents()\n\t\t\t: editor.getHTML();\n\t\t\n\t\tif (!this.isEqualValue(nextContents, currentContents)) {\n\t\t\t// Taint this `delta` object, so we can recognize whether the user\n\t\t\t// is trying to send it back as `value`, preventing a likely loop.\n\t\t\tthis.lastDeltaChangeSet = delta;\n\n\t\t\tthis.setState({ value: nextContents });\n\n\t\t\tif (this.props.onChange) {\n\t\t\t\tthis.props.onChange(value, delta, source, editor);\n\t\t\t}\n\t\t}\n\t},\n\n\tonEditorChangeSelection: function(nextSelection, source, editor) {\n\t\tvar currentSelection = this.getEditorSelection();\n\t\tvar hasGainedFocus = !currentSelection && nextSelection;\n\t\tvar hasLostFocus = currentSelection && !nextSelection;\n\n\t\tif (isEqual(nextSelection, currentSelection)) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.setState({ selection: nextSelection });\n\t\t\n\t\tif (this.props.onChangeSelection) {\n\t\t\tthis.props.onChangeSelection(nextSelection, source, editor);\n\t\t}\n\n\t\tif (hasGainedFocus && this.props.onFocus) {\n\t\t\tthis.props.onFocus(nextSelection, source, editor);\n\t\t} else if (hasLostFocus && this.props.onBlur) {\n\t\t\tthis.props.onBlur(currentSelection, source, editor);\n\t\t}\n\t},\n\n\tfocus: function() {\n\t\tthis.editor.focus();\n\t},\n\n\tblur: function() {\n\t\tthis.setEditorSelection(this.editor, null);\n\t}\n\n});\n\nmodule.exports = QuillComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}