{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AVITA\\\\Desktop\\\\chatbot\\\\src\\\\component\\\\Chatfeed.jsx\";\nimport React from 'react';\nimport Messageform from './Messageform';\nimport Mymessage from './Mymessage';\nimport Theirmessage from './Theirmessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatfeed = props => {\n  //destructor to use like convinient\n  const {\n    chats,\n    activeChat,\n    userName,\n    messages\n  } = props;\n  //if chat is true\n  const chat = chats && chats[activeChat];\n\n  //to readreceipt\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => {\n    var _person$person;\n    return person.last_read === message.id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"read-receipt\",\n      style: {\n        float: isMyMessage ? 'right' : 'left',\n        backgroundImage: `url(${person === null || person === void 0 ? void 0 : (_person$person = person.person) === null || _person$person === void 0 ? void 0 : _person$person.avatar})`\n      }\n    }, `read_${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  });\n\n  //to generate a message\n  const renderMessage = () => {\n    //fetch all message\n    //key is id of specific message\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      //message of that key\n      const message = messages[key];\n      //find last message key\n      const lastMessagekey = index === 0 ? null : keys[index - 1];\n      //to know if message is ours\n      const isMyMessage = userName === message.sender.username;\n      return (\n        /*#__PURE__*/\n        //return message\n        _jsxDEV(\"div\", {\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-block\",\n            children: isMyMessage ? /*#__PURE__*/_jsxDEV(Mymessage, {\n              message: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Theirmessage, {\n              message: message,\n              lastMessage: message[lastMessagekey]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"read-receipts\",\n            style: {\n              marginRight: isMyMessage ? '18px' : '0px',\n              marginLeft: isMyMessage ? '0px' : '68px'\n            },\n            children: renderReadReceipts(message, isMyMessage)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)]\n        }, `msg_${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)\n      );\n    });\n  };\n\n  //if there is no chat\n  if (!chat) return 'Loading...';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: chat.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-subtitle\",\n        children: chat.people.map(person => `${person.person.username}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this),\n    //call render message\n    renderMessage(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-form-container\",\n      children: /*#__PURE__*/_jsxDEV(Messageform, {\n        ...props,\n        chatId: activeChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_c = Chatfeed;\nexport default Chatfeed;\nvar _c;\n$RefreshReg$(_c, \"Chatfeed\");","map":{"version":3,"names":["React","Messageform","Mymessage","Theirmessage","Chatfeed","props","chats","activeChat","userName","messages","chat","renderReadReceipts","message","isMyMessage","people","map","person","index","last_read","id","float","backgroundImage","avatar","renderMessage","keys","Object","key","lastMessagekey","sender","username","width","marginRight","marginLeft","title","height"],"sources":["C:/Users/AVITA/Desktop/chatbot/src/component/Chatfeed.jsx"],"sourcesContent":["import React from 'react'\r\nimport Messageform from './Messageform';\r\nimport Mymessage from './Mymessage';\r\nimport Theirmessage from './Theirmessage';\r\n\r\nconst Chatfeed = (props) => {\r\n  //destructor to use like convinient\r\n  const { chats, activeChat, userName, messages } = props;\r\n  //if chat is true\r\n  const chat = chats && chats[activeChat];\r\n\r\n  //to readreceipt\r\n  const renderReadReceipts = (message,isMyMessage)=>\r\n    chat.people.map((person,index)=> person.last_read === message.id && (\r\n      <div\r\n      key = {`read_${index}`}\r\n      className=\"read-receipt\"\r\n      style={{\r\n        float:isMyMessage? 'right':'left',\r\n        backgroundImage:`url(${person?.person?.avatar})`\r\n        \r\n      }}\r\n      />\r\n    ))\r\n\r\n    \r\n  \r\n\r\n  //to generate a message\r\n  const renderMessage = () => {\r\n    //fetch all message\r\n    //key is id of specific message\r\n    const keys = Object.keys(messages);\r\n    return keys.map((key, index) => {\r\n      //message of that key\r\n      const message = messages[key];\r\n      //find last message key\r\n      const lastMessagekey = index === 0 ? null : keys[index - 1];\r\n      //to know if message is ours\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        //return message\r\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n          <div className='message-block'>\r\n            {/* render a meesage */}\r\n            {\r\n              isMyMessage\r\n                ? <Mymessage message={message}/>\r\n                : <Theirmessage message={message} lastMessage={message[lastMessagekey]}/>\r\n            }\r\n          </div>\r\n          <div className='read-receipts' style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n            {renderReadReceipts(message,isMyMessage)}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  //if there is no chat\r\n  if(!chat)\r\n  return 'Loading...'\r\n  return (\r\n    <div className='chat-feed'>\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {/* subtitle of chat */}\r\n            {chat.people.map((person) => `${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {\r\n      //call render message\r\n      renderMessage()}\r\n      <div style={{height : '100px'}}/>\r\n      <div className='message-form-container'>\r\n        <Messageform {...props} chatId = {activeChat}/>\r\n\r\n      </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Chatfeed"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}