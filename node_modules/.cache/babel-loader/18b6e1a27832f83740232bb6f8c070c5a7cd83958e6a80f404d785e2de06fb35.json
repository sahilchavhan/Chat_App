{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prevElementSibling = exports.nextElementSibling = exports.getName = exports.hasAttrib = exports.getAttributeValue = exports.getSiblings = exports.getParent = exports.getChildren = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar emptyArray = [];\n/**\n * Get a node's children.\n *\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nfunction getChildren(elem) {\n  var _a;\n  return (_a = elem.children) !== null && _a !== void 0 ? _a : emptyArray;\n}\nexports.getChildren = getChildren;\n/**\n * Get a node's parent.\n *\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node.\n */\nfunction getParent(elem) {\n  return elem.parent || null;\n}\nexports.getParent = getParent;\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first.\n * If we don't have a parent (the element is a root node),\n * we walk the element's `prev` & `next` to get all remaining nodes.\n *\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings.\n */\nfunction getSiblings(elem) {\n  var _a, _b;\n  var parent = getParent(elem);\n  if (parent != null) return getChildren(parent);\n  var siblings = [elem];\n  var prev = elem.prev,\n    next = elem.next;\n  while (prev != null) {\n    siblings.unshift(prev);\n    _a = prev, prev = _a.prev;\n  }\n  while (next != null) {\n    siblings.push(next);\n    _b = next, next = _b.next;\n  }\n  return siblings;\n}\nexports.getSiblings = getSiblings;\n/**\n * Gets an attribute from an element.\n *\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nfunction getAttributeValue(elem, name) {\n  var _a;\n  return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\nexports.getAttributeValue = getAttributeValue;\n/**\n * Checks whether an element has an attribute.\n *\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nfunction hasAttrib(elem, name) {\n  return elem.attribs != null && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;\n}\nexports.hasAttrib = hasAttrib;\n/**\n * Get the tag name of an element.\n *\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nfunction getName(elem) {\n  return elem.name;\n}\nexports.getName = getName;\n/**\n * Returns the next element sibling of a node.\n *\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag.\n */\nfunction nextElementSibling(elem) {\n  var _a;\n  var next = elem.next;\n  while (next !== null && !(0, domhandler_1.isTag)(next)) _a = next, next = _a.next;\n  return next;\n}\nexports.nextElementSibling = nextElementSibling;\n/**\n * Returns the previous element sibling of a node.\n *\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag.\n */\nfunction prevElementSibling(elem) {\n  var _a;\n  var prev = elem.prev;\n  while (prev !== null && !(0, domhandler_1.isTag)(prev)) _a = prev, prev = _a.prev;\n  return prev;\n}\nexports.prevElementSibling = prevElementSibling;","map":{"version":3,"names":["Object","defineProperty","exports","value","prevElementSibling","nextElementSibling","getName","hasAttrib","getAttributeValue","getSiblings","getParent","getChildren","domhandler_1","require","emptyArray","elem","_a","children","parent","_b","siblings","prev","next","unshift","push","name","attribs","prototype","hasOwnProperty","call","isTag"],"sources":["C:/Users/AVITA/Desktop/chatapp/node_modules/domutils/lib/traversal.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prevElementSibling = exports.nextElementSibling = exports.getName = exports.hasAttrib = exports.getAttributeValue = exports.getSiblings = exports.getParent = exports.getChildren = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar emptyArray = [];\n/**\n * Get a node's children.\n *\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nfunction getChildren(elem) {\n    var _a;\n    return (_a = elem.children) !== null && _a !== void 0 ? _a : emptyArray;\n}\nexports.getChildren = getChildren;\n/**\n * Get a node's parent.\n *\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node.\n */\nfunction getParent(elem) {\n    return elem.parent || null;\n}\nexports.getParent = getParent;\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first.\n * If we don't have a parent (the element is a root node),\n * we walk the element's `prev` & `next` to get all remaining nodes.\n *\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings.\n */\nfunction getSiblings(elem) {\n    var _a, _b;\n    var parent = getParent(elem);\n    if (parent != null)\n        return getChildren(parent);\n    var siblings = [elem];\n    var prev = elem.prev, next = elem.next;\n    while (prev != null) {\n        siblings.unshift(prev);\n        (_a = prev, prev = _a.prev);\n    }\n    while (next != null) {\n        siblings.push(next);\n        (_b = next, next = _b.next);\n    }\n    return siblings;\n}\nexports.getSiblings = getSiblings;\n/**\n * Gets an attribute from an element.\n *\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nfunction getAttributeValue(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\nexports.getAttributeValue = getAttributeValue;\n/**\n * Checks whether an element has an attribute.\n *\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nfunction hasAttrib(elem, name) {\n    return (elem.attribs != null &&\n        Object.prototype.hasOwnProperty.call(elem.attribs, name) &&\n        elem.attribs[name] != null);\n}\nexports.hasAttrib = hasAttrib;\n/**\n * Get the tag name of an element.\n *\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nfunction getName(elem) {\n    return elem.name;\n}\nexports.getName = getName;\n/**\n * Returns the next element sibling of a node.\n *\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag.\n */\nfunction nextElementSibling(elem) {\n    var _a;\n    var next = elem.next;\n    while (next !== null && !(0, domhandler_1.isTag)(next))\n        (_a = next, next = _a.next);\n    return next;\n}\nexports.nextElementSibling = nextElementSibling;\n/**\n * Returns the previous element sibling of a node.\n *\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag.\n */\nfunction prevElementSibling(elem) {\n    var _a;\n    var prev = elem.prev;\n    while (prev !== null && !(0, domhandler_1.isTag)(prev))\n        (_a = prev, prev = _a.prev);\n    return prev;\n}\nexports.prevElementSibling = prevElementSibling;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}