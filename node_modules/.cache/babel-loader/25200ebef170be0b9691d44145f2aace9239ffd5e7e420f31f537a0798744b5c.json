{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getElementsByTagType = exports.getElementsByTagName = exports.getElementById = exports.getElements = exports.testElement = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar querying_1 = require(\"./querying\");\nvar Checks = {\n  tag_name: function (name) {\n    if (typeof name === \"function\") {\n      return function (elem) {\n        return (0, domhandler_1.isTag)(elem) && name(elem.name);\n      };\n    } else if (name === \"*\") {\n      return domhandler_1.isTag;\n    }\n    return function (elem) {\n      return (0, domhandler_1.isTag)(elem) && elem.name === name;\n    };\n  },\n  tag_type: function (type) {\n    if (typeof type === \"function\") {\n      return function (elem) {\n        return type(elem.type);\n      };\n    }\n    return function (elem) {\n      return elem.type === type;\n    };\n  },\n  tag_contains: function (data) {\n    if (typeof data === \"function\") {\n      return function (elem) {\n        return (0, domhandler_1.isText)(elem) && data(elem.data);\n      };\n    }\n    return function (elem) {\n      return (0, domhandler_1.isText)(elem) && elem.data === data;\n    };\n  }\n};\n/**\n * @param attrib Attribute to check.\n * @param value Attribute value to look for.\n * @returns A function to check whether the a node has an attribute with a particular value.\n */\nfunction getAttribCheck(attrib, value) {\n  if (typeof value === \"function\") {\n    return function (elem) {\n      return (0, domhandler_1.isTag)(elem) && value(elem.attribs[attrib]);\n    };\n  }\n  return function (elem) {\n    return (0, domhandler_1.isTag)(elem) && elem.attribs[attrib] === value;\n  };\n}\n/**\n * @param a First function to combine.\n * @param b Second function to combine.\n * @returns A function taking a node and returning `true` if either\n * of the input functions returns `true` for the node.\n */\nfunction combineFuncs(a, b) {\n  return function (elem) {\n    return a(elem) || b(elem);\n  };\n}\n/**\n * @param options An object describing nodes to look for.\n * @returns A function executing all checks in `options` and returning `true`\n * if any of them match a node.\n */\nfunction compileTest(options) {\n  var funcs = Object.keys(options).map(function (key) {\n    var value = options[key];\n    return Object.prototype.hasOwnProperty.call(Checks, key) ? Checks[key](value) : getAttribCheck(key, value);\n  });\n  return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n}\n/**\n * @param options An object describing nodes to look for.\n * @param node The element to test.\n * @returns Whether the element matches the description in `options`.\n */\nfunction testElement(options, node) {\n  var test = compileTest(options);\n  return test ? test(node) : true;\n}\nexports.testElement = testElement;\n/**\n * @param options An object describing nodes to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes that match `options`.\n */\nfunction getElements(options, nodes, recurse, limit) {\n  if (limit === void 0) {\n    limit = Infinity;\n  }\n  var test = compileTest(options);\n  return test ? (0, querying_1.filter)(test, nodes, recurse, limit) : [];\n}\nexports.getElements = getElements;\n/**\n * @param id The unique ID attribute value to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @returns The node with the supplied ID.\n */\nfunction getElementById(id, nodes, recurse) {\n  if (recurse === void 0) {\n    recurse = true;\n  }\n  if (!Array.isArray(nodes)) nodes = [nodes];\n  return (0, querying_1.findOne)(getAttribCheck(\"id\", id), nodes, recurse);\n}\nexports.getElementById = getElementById;\n/**\n * @param tagName Tag name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `tagName`.\n */\nfunction getElementsByTagName(tagName, nodes, recurse, limit) {\n  if (recurse === void 0) {\n    recurse = true;\n  }\n  if (limit === void 0) {\n    limit = Infinity;\n  }\n  return (0, querying_1.filter)(Checks.tag_name(tagName), nodes, recurse, limit);\n}\nexports.getElementsByTagName = getElementsByTagName;\n/**\n * @param type Element type to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `type`.\n */\nfunction getElementsByTagType(type, nodes, recurse, limit) {\n  if (recurse === void 0) {\n    recurse = true;\n  }\n  if (limit === void 0) {\n    limit = Infinity;\n  }\n  return (0, querying_1.filter)(Checks.tag_type(type), nodes, recurse, limit);\n}\nexports.getElementsByTagType = getElementsByTagType;","map":{"version":3,"names":["Object","defineProperty","exports","value","getElementsByTagType","getElementsByTagName","getElementById","getElements","testElement","domhandler_1","require","querying_1","Checks","tag_name","name","elem","isTag","tag_type","type","tag_contains","data","isText","getAttribCheck","attrib","attribs","combineFuncs","a","b","compileTest","options","funcs","keys","map","key","prototype","hasOwnProperty","call","length","reduce","node","test","nodes","recurse","limit","Infinity","filter","id","Array","isArray","findOne","tagName"],"sources":["C:/Users/AVITA/Desktop/chatapp/node_modules/domutils/lib/legacy.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getElementsByTagType = exports.getElementsByTagName = exports.getElementById = exports.getElements = exports.testElement = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar querying_1 = require(\"./querying\");\nvar Checks = {\n    tag_name: function (name) {\n        if (typeof name === \"function\") {\n            return function (elem) { return (0, domhandler_1.isTag)(elem) && name(elem.name); };\n        }\n        else if (name === \"*\") {\n            return domhandler_1.isTag;\n        }\n        return function (elem) { return (0, domhandler_1.isTag)(elem) && elem.name === name; };\n    },\n    tag_type: function (type) {\n        if (typeof type === \"function\") {\n            return function (elem) { return type(elem.type); };\n        }\n        return function (elem) { return elem.type === type; };\n    },\n    tag_contains: function (data) {\n        if (typeof data === \"function\") {\n            return function (elem) { return (0, domhandler_1.isText)(elem) && data(elem.data); };\n        }\n        return function (elem) { return (0, domhandler_1.isText)(elem) && elem.data === data; };\n    },\n};\n/**\n * @param attrib Attribute to check.\n * @param value Attribute value to look for.\n * @returns A function to check whether the a node has an attribute with a particular value.\n */\nfunction getAttribCheck(attrib, value) {\n    if (typeof value === \"function\") {\n        return function (elem) { return (0, domhandler_1.isTag)(elem) && value(elem.attribs[attrib]); };\n    }\n    return function (elem) { return (0, domhandler_1.isTag)(elem) && elem.attribs[attrib] === value; };\n}\n/**\n * @param a First function to combine.\n * @param b Second function to combine.\n * @returns A function taking a node and returning `true` if either\n * of the input functions returns `true` for the node.\n */\nfunction combineFuncs(a, b) {\n    return function (elem) { return a(elem) || b(elem); };\n}\n/**\n * @param options An object describing nodes to look for.\n * @returns A function executing all checks in `options` and returning `true`\n * if any of them match a node.\n */\nfunction compileTest(options) {\n    var funcs = Object.keys(options).map(function (key) {\n        var value = options[key];\n        return Object.prototype.hasOwnProperty.call(Checks, key)\n            ? Checks[key](value)\n            : getAttribCheck(key, value);\n    });\n    return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n}\n/**\n * @param options An object describing nodes to look for.\n * @param node The element to test.\n * @returns Whether the element matches the description in `options`.\n */\nfunction testElement(options, node) {\n    var test = compileTest(options);\n    return test ? test(node) : true;\n}\nexports.testElement = testElement;\n/**\n * @param options An object describing nodes to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes that match `options`.\n */\nfunction getElements(options, nodes, recurse, limit) {\n    if (limit === void 0) { limit = Infinity; }\n    var test = compileTest(options);\n    return test ? (0, querying_1.filter)(test, nodes, recurse, limit) : [];\n}\nexports.getElements = getElements;\n/**\n * @param id The unique ID attribute value to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @returns The node with the supplied ID.\n */\nfunction getElementById(id, nodes, recurse) {\n    if (recurse === void 0) { recurse = true; }\n    if (!Array.isArray(nodes))\n        nodes = [nodes];\n    return (0, querying_1.findOne)(getAttribCheck(\"id\", id), nodes, recurse);\n}\nexports.getElementById = getElementById;\n/**\n * @param tagName Tag name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `tagName`.\n */\nfunction getElementsByTagName(tagName, nodes, recurse, limit) {\n    if (recurse === void 0) { recurse = true; }\n    if (limit === void 0) { limit = Infinity; }\n    return (0, querying_1.filter)(Checks.tag_name(tagName), nodes, recurse, limit);\n}\nexports.getElementsByTagName = getElementsByTagName;\n/**\n * @param type Element type to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `type`.\n */\nfunction getElementsByTagType(type, nodes, recurse, limit) {\n    if (recurse === void 0) { recurse = true; }\n    if (limit === void 0) { limit = Infinity; }\n    return (0, querying_1.filter)(Checks.tag_type(type), nodes, recurse, limit);\n}\nexports.getElementsByTagType = getElementsByTagType;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}